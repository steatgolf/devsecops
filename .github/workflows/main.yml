name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:

  test:
    name: Unit test
    runs-on: ubuntu-latest  

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Install Make
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: 3.13

      - name: Install Dependencies
        run: pip install -r src/requirements.txt 

      - name: Run Pytest with make
        run: make test

  bandit_sast_scan:
    name: bandit_sast_scan
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2

    - name: Set up Python
      uses: actions/setup-python@v5.4.0
      with:
        python-version: 3.13

    - name: Install Bandit
      run: pip install bandit

    - name: Run Bandit Scan
      run: bandit -ll -ii -r . -f json -o bandit-sast-report.json

    - name: Upload Artifact
      uses: actions/upload-artifact@v4.6.1
      if: always()
      with:
        name: bandit-sast-report
        path: bandit-sast-report.json

  sonarqube:
    name: sonarcloud_sast_scan
    needs: test
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: SonarQube Cloud Scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk_sca_scan:
    name: snyk_sca_scan
    needs: test
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: 3.13

      - name: Install dependencies (if needed)
        run: pip install -r src/requirements.txt
                
      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Test
        run: snyk test --file=src/requirements.txt --severity-threshold=high --json > snyk-sca-report.json || true

      - name: Upload Report as Artifact
        uses: actions/upload-artifact@v4.6.1
        if: always()
        with:
          name: snyk-sca-report
          path: snyk-sca-report.json      